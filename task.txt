1. Реализовать шаблонный класс TQueue (по материалам занятий 06.11) с двумя конструкторами, методами void push(T el), T pop(), bool isEmpty() и перегрузкой оператора вывода.
2. Реализовать очередь с приоритетами на базе своей (написанной для пункта 1) очереди. Разрешено добавлять и перегружать любые другие методы в дочернем классе (если понадобится).
3. Взять свой стэк, написанный для третьей лабораторной работы (либо написать его :), и реализовать очередь как дочерний класс от базового класса стэка с перегрузкой методов pop, top и push (здесь top будет возвращать элемент из головы очереди). Разрешено добавлять и перегружать любые другие методы в дочернем классе (если понадобится).
4. В main() (либо сторонней функцией, запущенной далее в main()) реализовать поиск минимального элемента в очереди. Разрешено использовать любые структуры данных, которые мы писали ранее (только самописные классы).

Пункты 1 и 2 необходимо выполнить всем для зачета по занятию. Пункты 3 и 4 опциональны (для заинтересованных студентов). Сдавать работы необходимо добавлением папки с фамилией в форкнутый репозиторий при помощи pull request'а. Вопросы можно писать на почту inc8795@yandex.ru или добавлять комментариями к своему pull request'у. Сдать работу нужно до своей следующей пары. Принятой считается работа, папку с которой я замерджила в основной репозиторий.

ВАЖНО: не нужно писать тесты на каждый из этих классов, достаточно в main() проверить корректность работы каждого метода и подгрузить этот main() в папку. В симейках необходимости также нет. Я жду от вас только .h, .cpp с реализациями классов и main.cpp с реализацией задачи 4 и/или проверкой корректности методов.
